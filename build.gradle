plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
    id "dev.jacomet.logging-capabilities" version "0.10.0"
    id 'io.vertx.vertx-plugin' version "1.3.0"
    id "com.github.ben-manes.versions" version "0.39.0"
}

group 'elkx'
version '0.0.1'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    implementation(
        "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0",
        "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.6.0",
    )

    implementation(
        "io.vertx:vertx-lang-kotlin-coroutines",
        "io.vertx:vertx-web",
//        "io.vertx:vertx-web-api-contract",
        "io.vertx:vertx-config",
    )

    implementation 'ch.qos.logback:logback-classic:1.2.10'

    implementation(
        'org.eclipse.elk:org.eclipse.elk.graph.json:0.7.1',
        'org.eclipse.elk:org.eclipse.elk.alg.layered:0.7.1',
    )

    testImplementation(
        'org.junit.jupiter:junit-jupiter-api:5.8.2',
        'org.jetbrains.kotlin:kotlin-test',

        "io.vertx:vertx-web-client",
    )

    testImplementation 'io.netty:netty-resolver-dns-native-macos:4.1.72.Final:osx-x86_64'
}

vertx {
    mainVerticle = "elkx.App"
    vertxVersion = "4.2.3"
}

dependencyUpdates {
    checkConstraints = true

    rejectVersionIf {
        final version = it.candidate.version.toLowerCase()

        [
            "m", // milestone
            "alpha",
            "beta",
            "eap",
            "rc",
            "cr",
        ].any { version.contains(it) }
    }
}

test {
    useJUnitPlatform()
}

loggingCapabilities {
    enforceLogback()
}

shadowJar {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

compileKotlin {
    kotlinOptions {
        if (System.env.CI) {
            allWarningsAsErrors = true
        }
    }
}
